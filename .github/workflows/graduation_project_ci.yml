name: graduation_project CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: myapp_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U myuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      selenium-hub:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: >-
          --shm-size="2g"
          --health-cmd "curl http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v5

      - name: Ruby をセットアップ
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - name: Gemをインストール
        run: bundle install --jobs 4 --retry 3

      - name: データベースをセットアップ
        run: |
          cp config/database.ci.yml config/database.yml
          RAILS_ENV=test bundle exec rails db:create
          RAILS_ENV=test bundle exec rails db:migrate

      - name: アセットをプリコンパイル
        run: RAILS_ENV=test bundle exec rails assets:precompile

      - name: Create tmp/capybara directory
        run: mkdir -p tmp/capybara

      - name: テストを実行
        run: bundle exec rspec

      - name: RuboCopを実行
        run: bundle exec rubocop

      - name: 失敗した場合スクリーンショットをアップ
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: tmp/capybara

      - name: デプロイ（CI成功時のみ）
        if: success() && github.ref == 'refs/heads/main'
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK_URL"
